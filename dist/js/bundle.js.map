{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/board.ts","src/ts/display.ts","src/ts/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","Object","defineProperty","value","playSquare","getSquare","resetGame","resetBoard","getBoard","toggleAI","getPlayerNames","setPlayerNames","getScores","getCurrentPlayerMarker","squares","players","X","name","marker","score","turn","ai","O","getCurrentPlayer","checkIfEqual","winSet","names","console","dir","win","successful","mark","setSquare","some","displayHandler","displayNames","board","document","querySelectorAll","displayModal","id","modal","getElementById","style","display","hideModal","writeBoardToPage","counter","forEach","square","classList","add","concat","writeInfoToPage","p1Label","querySelector","p1Info","p2Label","p2Info","_a","p1Score","p2Score","_b","p1Name","p2Name","player","textContent","toString","parentElement","resetBoardClasses","remove","toggleNameInput","playerSelect","p2NameInput","checked","addEventListener","index","Number","radio","display_1"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"export type Marker = 'O' | 'X';\n\ninterface Player {\n  name: string;\n  marker: Marker;\n  score: number;\n  turn: boolean;\n  ai: boolean;\n}\n\ninterface Players {\n  X: Player;\n  O: Player;\n}\n\nlet squares = ['', '', '', '', '', '', '', '', ''];\nconst players: Players = {\n  X: { name: '✖', marker: 'X', score: 0, turn: true, ai: false },\n  O: { name: 'ⵔ', marker: 'O', score: 0, turn: false, ai: false },\n};\n\nfunction swapPlayers() {\n  players.X.turn = !players.X.turn;\n  players.O.turn = !players.O.turn;\n}\n\nfunction getCurrentPlayer(): Player {\n  if (players.X.turn) {\n    return players.X;\n  }\n  return players.O;\n}\n\nexport function getCurrentPlayerMarker(): string {\n  const player = getCurrentPlayer();\n  return player.marker;\n}\n\nexport function getScores(): number[] {\n  return [players.X.score, players.O.score];\n}\n\nexport function setPlayerNames(names: string[]): void {\n  [players.X.name, players.O.name] = names;\n}\n\nexport function getPlayerNames(): string[] {\n  return [players.X.name, players.O.name];\n}\n\nexport function toggleAI(): void {\n  players.O.ai = !players.O.ai;\n}\n\nfunction updateScores(): void {\n  const player = getCurrentPlayer();\n  player.score += 1;\n}\n\nexport function getBoard(): string[] {\n  return squares;\n}\n\nexport function resetBoard(): void {\n  squares = ['', '', '', '', '', '', '', '', ''];\n}\n\nexport function resetGame(): void {\n  squares = ['', '', '', '', '', '', '', '', ''];\n  players.X.score = 0;\n  players.O.score = 0;\n}\n\nexport function getSquare(i: number): string {\n  return squares[i];\n}\n\nfunction setSquare(i: number, mark: string): boolean {\n  if (getSquare(i) === '') {\n    squares[i] = mark;\n    return true;\n  }\n  return false;\n}\n\nfunction checkIfEqual(winSet: string[]): boolean {\n  return winSet[0] === winSet[1] && winSet[1] === winSet[2] && winSet[0] !== '';\n}\n\nfunction checkForWin(): boolean {\n  const lines = [\n    [squares[0], squares[1], squares[2]],\n    [squares[3], squares[4], squares[5]],\n    [squares[6], squares[7], squares[8]],\n    [squares[0], squares[3], squares[6]],\n    [squares[1], squares[4], squares[7]],\n    [squares[2], squares[5], squares[8]],\n    [squares[0], squares[4], squares[8]],\n    [squares[2], squares[4], squares[6]],\n  ];\n\n  return lines.some(checkIfEqual);\n}\n\nexport function playSquare(i: number): boolean {\n  console.dir(players);\n  const marker = getCurrentPlayerMarker();\n  let win = false;\n\n  const successful = setSquare(i, marker);\n\n  if (successful) {\n    win = checkForWin();\n    if (win) updateScores();\n    swapPlayers();\n  }\n\n  return win;\n}\n","// eslint-disable-next-line import/no-unresolved, import/extensions\nimport * as board from './board';\n\nconst squares = document.querySelectorAll<HTMLElement>('.square');\n\nfunction displayModal(id: string): void {\n  // TODO: Fix players swapping before displaying win page.\n  const modal = document.getElementById(id);\n  if (modal != null) {\n    modal.style.display = 'block';\n  }\n}\n\nfunction hideModal(id: string): void {\n  const modal = document.getElementById(id);\n  if (modal != null) {\n    modal.style.display = 'none';\n  }\n}\n\nfunction writeBoardToPage(): void {\n  let counter = 0;\n  let marker: string = '';\n\n  squares.forEach((square) => {\n    marker = board.getSquare(counter);\n    if (marker !== '') {\n      square.classList.add(`${marker}`);\n    }\n    counter += 1;\n  });\n}\n\nfunction writeInfoToPage(): void {\n  const p1Label = document.querySelector('.p1-label');\n  const p1Info = document.querySelector('.p1-info');\n  const turn = document.querySelectorAll('.turn-info');\n  const p2Label = document.querySelector('.p2-label');\n  const p2Info = document.querySelector('.p2-info');\n\n  const [p1Score, p2Score] = board.getScores();\n  const [p1Name, p2Name] = board.getPlayerNames();\n  const player = board.getCurrentPlayerMarker();\n  const marker = player === 'X' ? '✖' : 'ⵔ ';\n\n  p1Label!.textContent = `${p1Name} Score`;\n  p1Info!.textContent = p1Score.toString();\n  turn[0].parentElement!.classList.value = `${player} infobox`;\n  turn.forEach((e) => {\n    e.textContent = marker;\n  });\n  p2Label!.textContent = `${p2Name} Score`;\n  p2Info!.textContent = p2Score.toString();\n}\n\nfunction resetBoardClasses(): void {\n  squares.forEach((square) => {\n    square.classList.remove('X', 'O');\n  });\n}\n\nfunction setSquareEventHandlers(): void {\n  let isWin = false;\n\n  squares.forEach((square) => {\n    square.addEventListener('click', () => {\n      const index: number = Number(square.id);\n      isWin = board.playSquare(index);\n      if (isWin) {\n        writeBoardToPage();\n        displayModal('win-screen');\n      } else {\n        writeBoardToPage();\n        writeInfoToPage();\n      }\n    });\n  });\n}\n\nfunction setNewGameButton(): void {\n  const newGame = document.querySelector('.new-game');\n\n  newGame!.addEventListener('click', () => {\n    board.resetBoard();\n    resetBoardClasses();\n    writeBoardToPage();\n    writeInfoToPage();\n    hideModal('win-screen');\n  });\n}\n\nfunction setNameSubmitButton(): void {\n  const submit = document.querySelector('.name-submit');\n\n  submit!.addEventListener('click', () => {\n    const p1Name = (<HTMLInputElement>document.getElementById('p1-name')).value;\n    const p2Name = (<HTMLInputElement>document.getElementById('p2-name')).value;\n    board.setPlayerNames([p1Name, p2Name]);\n    writeInfoToPage();\n    hideModal('names-screen');\n  });\n}\n\nfunction setResetButton(): void {\n  const newGame = document.querySelector('.reset');\n\n  newGame!.addEventListener('click', () => {\n    board.resetGame();\n    resetBoardClasses();\n    writeBoardToPage();\n    writeInfoToPage();\n    displayModal('names-screen');\n  });\n}\n\nfunction toggleNameInput(): void {\n  const playerSelect = <HTMLInputElement>(\n    document.getElementById('multi-player')\n  );\n  const p2NameInput = document.getElementById('p2-input');\n\n  if (playerSelect!.checked) {\n    p2NameInput!.style.display = 'block';\n  } else {\n    p2NameInput!.style.display = 'none';\n  }\n}\n\nfunction setPlayerSelectHandler(): void {\n  const radioButtons = document.querySelectorAll('input[name=\"player-select\"]');\n  radioButtons.forEach((radio) => {\n    radio.addEventListener('click', toggleNameInput);\n  });\n}\n\nexport function displayNames(): void {\n  displayModal('names-screen');\n}\n\nexport function displayHandler(): void {\n  setNewGameButton();\n  setNameSubmitButton();\n  setResetButton();\n  setSquareEventHandlers();\n  setPlayerSelectHandler();\n  writeBoardToPage();\n  writeInfoToPage();\n}\n","// eslint-disable-next-line import/extensions\nimport { displayHandler, displayNames } from './display';\n\ndisplayNames();\ndisplayHandler();\n"]}