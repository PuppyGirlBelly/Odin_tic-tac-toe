{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/ai.ts","src/ts/board.ts","src/ts/display.ts","src/ts/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","Object","defineProperty","value","board_1","USER","COMP","EMPTY","getEmptySquares","board","indices","indexOf","forEach","v","push","minimax","player","depth","currentMoves","winner","_a","b","getWinner","opponent","getScore","score","bestScore","move","default","getBoard","bestMove","playSquare","setSquare","getSquare","resetGame","resetBoard","setMultiplayer","getPlayerNames","setPlayerNames","getScores","getCurrentPlayerMarker","ai_1","multiplayer","squares","players","X","name","marker","turn","O","getCurrentPlayer","mark","markSquare","state","line","every","names","bool","displayHandler","displayNames","document","querySelectorAll","displayModal","id","modal","getElementById","style","display","hideModal","writeBoardToPage","counter","square","classList","add","concat","writeInfoToPage","p1Label","querySelector","p1Info","p2Label","p2Info","p1Score","p2Score","_b","p1Name","p2Name","textContent","toString","parentElement","resetBoardClasses","remove","toggleNameInput","multi","p2NameInput","checked","win","button","addEventListener","index","Number","radio","display_1"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Marker, getBoard } from './board';\n\nconst MIN = -11;\nconst MAX = 11;\nconst USER: Marker = 'X';\nconst COMP: Marker = 'O';\nconst EMPTY = '';\n\nfunction getEmptySquares(board: string[]): number[] {\n  const indices: number[] = [];\n\n  if (board.indexOf(EMPTY) !== -1) {\n    board.forEach((v, i) => {\n      if (v === EMPTY) indices.push(i);\n    });\n  }\n\n  return indices;\n}\n\nfunction getWinner(board: string[]): string {\n  let winner = EMPTY;\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  lines.forEach(([a, b, c]) => {\n    if (board[a] !== null && board[a] === board[b] && board[a] === board[c]) {\n      winner = board[a];\n    }\n  });\n\n  return winner;\n}\n\nfunction getScore(winner: string, depth: number): number {\n  if (winner === COMP) return 10 - depth;\n  if (winner === USER) return -10 + depth;\n  return 0;\n}\n\nfunction minimax(board: string[], player: Marker, depth: number): number {\n  const currentMoves = getEmptySquares(board);\n  const winner = getWinner(board);\n  const opponent: Marker = player === COMP ? USER : COMP;\n\n  if (winner !== EMPTY || currentMoves.length === 0) {\n    return getScore(winner, depth);\n  }\n\n  let bestScore = player === COMP ? MIN : MAX;\n  let score: number;\n\n  currentMoves.forEach((move) => {\n    // eslint-disable-next-line no-param-reassign\n    board[move] = player;\n    score = minimax(board, opponent, depth + 1);\n\n    if (\n      (player === COMP && score > bestScore) ||\n      (player === USER && score < bestScore)\n    ) {\n      bestScore = score;\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    board[move] = EMPTY;\n  });\n\n  return bestScore;\n}\n\nexport default function aiMove(): number {\n  const board = getBoard();\n  const currentMoves = getEmptySquares(board);\n  let [bestMove] = currentMoves;\n  let bestScore = MIN;\n\n  currentMoves.forEach((move) => {\n    // eslint-disable-next-line no-param-reassign\n    board[move] = COMP;\n    const score = minimax(board, USER, 1);\n    // eslint-disable-next-line no-param-reassign\n    board[move] = EMPTY;\n\n    if (score > bestScore) {\n      bestScore = score;\n      bestMove = move;\n    }\n  });\n\n  return bestMove;\n}\n","// eslint-disable-next-line no-unused-vars, import/no-unresolved, import/extensions\nimport aiMove from './ai';\n\nexport type Marker = 'O' | 'X';\nexport type GameState = 'playing' | 'tie' | 'win';\n\ninterface Player {\n  name: string;\n  marker: Marker;\n  score: number;\n  turn: boolean;\n}\n\ninterface Players {\n  X: Player;\n  O: Player;\n}\n\nlet multiplayer = false;\nlet squares = ['', '', '', '', '', '', '', '', ''];\nconst players: Players = {\n  X: { name: '✖', marker: 'X', score: 0, turn: true },\n  O: { name: 'ⵔ', marker: 'O', score: 0, turn: false },\n};\n\nfunction swapPlayers() {\n  players.X.turn = !players.X.turn;\n  players.O.turn = !players.O.turn;\n}\n\nfunction getCurrentPlayer(): Player {\n  if (players.X.turn) {\n    return players.X;\n  }\n  return players.O;\n}\n\nexport function getCurrentPlayerMarker(): Marker {\n  const player = getCurrentPlayer();\n  return player.marker;\n}\n\nexport function getScores(): number[] {\n  return [players.X.score, players.O.score];\n}\n\nexport function setPlayerNames(names: string[]): void {\n  [players.X.name, players.O.name] = names;\n}\n\nexport function getPlayerNames(): string[] {\n  return [players.X.name, players.O.name];\n}\n\nexport function setMultiplayer(bool: boolean): void {\n  multiplayer = bool;\n}\n\nfunction updateScores(): void {\n  const player = getCurrentPlayer();\n  player.score += 1;\n}\n\nexport function getBoard(): string[] {\n  return squares;\n}\n\nexport function resetBoard(): void {\n  squares = ['', '', '', '', '', '', '', '', ''];\n  players.X.turn = true;\n  players.O.turn = false;\n}\n\nexport function resetGame(): void {\n  squares = ['', '', '', '', '', '', '', '', ''];\n  players.X.turn = true;\n  players.X.score = 0;\n  players.O.turn = false;\n  players.O.score = 0;\n}\n\nexport function getSquare(i: number): string {\n  return squares[i];\n}\n\nexport function setSquare(i: number, mark: Marker): boolean {\n  if (getSquare(i) === '') {\n    squares[i] = mark;\n    return true;\n  }\n  return false;\n}\n\nfunction getWinner(): string {\n  let winner = '';\n  [\n    [squares[0], squares[1], squares[2]],\n    [squares[3], squares[4], squares[5]],\n    [squares[6], squares[7], squares[8]],\n    [squares[0], squares[3], squares[6]],\n    [squares[1], squares[4], squares[7]],\n    [squares[2], squares[5], squares[8]],\n    [squares[0], squares[4], squares[8]],\n    [squares[2], squares[4], squares[6]],\n  ].forEach((line) => {\n    if (line.every((v) => v === line[0] && v !== '')) {\n      // eslint-disable-next-line prefer-destructuring\n      winner = line[0];\n    }\n  });\n\n  return winner;\n}\n\nfunction hasTie(): boolean {\n  return squares.indexOf('') === -1;\n}\n\nfunction markSquare(i: number): GameState {\n  let state: GameState = 'playing';\n\n  const marker = getCurrentPlayerMarker();\n  const successful = setSquare(i, marker);\n\n  if (successful) {\n    if (getWinner() !== '') {\n      state = 'win';\n      updateScores();\n      return state;\n    }\n    if (hasTie()) {\n      state = 'tie';\n      return state;\n    }\n  }\n\n  swapPlayers();\n  return state;\n}\n\nexport function playSquare(i: number): GameState {\n  let state: GameState = 'playing';\n\n  if (multiplayer) {\n    state = markSquare(i);\n    return state;\n  }\n\n  state = markSquare(i);\n  if (state === 'win' || state === 'tie') return state;\n\n  const aiSquare = aiMove();\n  state = markSquare(aiSquare);\n  return state;\n}\n","// eslint-disable-next-line import/no-unresolved, import/extensions\nimport * as board from './board';\n\nconst squares = document.querySelectorAll<HTMLElement>('.square');\n\nfunction displayModal(id: string): void {\n  const modal = document.getElementById(id);\n  if (modal != null) {\n    modal.style.display = 'block';\n  }\n}\n\nfunction hideModal(id: string): void {\n  const modal = document.getElementById(id);\n  if (modal != null) {\n    modal.style.display = 'none';\n  }\n}\n\nfunction writeBoardToPage(): void {\n  let counter = 0;\n  let marker: string = '';\n\n  squares.forEach((square) => {\n    marker = board.getSquare(counter);\n    if (marker !== '') {\n      square.classList.add(`${marker}`);\n    }\n    counter += 1;\n  });\n}\n\nfunction writeInfoToPage(): void {\n  const p1Label = document.querySelector('.p1-label');\n  const p1Info = document.querySelector('.p1-info');\n  const turn = document.querySelectorAll('.turn-info');\n  const p2Label = document.querySelector('.p2-label');\n  const p2Info = document.querySelector('.p2-info');\n\n  const [p1Score, p2Score] = board.getScores();\n  const [p1Name, p2Name] = board.getPlayerNames();\n  const player = board.getCurrentPlayerMarker();\n  const marker = player === 'X' ? '✖' : 'ⵔ ';\n\n  p1Label!.textContent = `${p1Name} Score`;\n  p1Info!.textContent = p1Score.toString();\n  turn[0].parentElement!.classList.value = `${player} infobox`;\n  turn.forEach((e) => {\n    e.textContent = marker;\n  });\n  p2Label!.textContent = `${p2Name} Score`;\n  p2Info!.textContent = p2Score.toString();\n}\n\nfunction resetBoardClasses(): void {\n  squares.forEach((square) => {\n    square.classList.remove('X', 'O');\n  });\n}\n\nfunction setSquareEventHandlers(): void {\n  let win: board.GameState = 'playing';\n\n  squares.forEach((square) => {\n    square.addEventListener('click', () => {\n      const index: number = Number(square.id);\n      win = board.playSquare(index);\n      writeInfoToPage();\n      writeBoardToPage();\n\n      if (win === 'win') displayModal('win-screen');\n      if (win === 'tie') displayModal('tie-screen');\n    });\n  });\n}\n\nfunction setNewGameButton(): void {\n  const newGame = document.querySelectorAll('.new-game');\n\n  newGame!.forEach((button) => {\n    button.addEventListener('click', () => {\n      board.resetBoard();\n      resetBoardClasses();\n      writeBoardToPage();\n      writeInfoToPage();\n      hideModal('win-screen');\n      hideModal('tie-screen');\n    });\n  });\n}\n\nfunction setNameSubmitButton(): void {\n  const submit = document.querySelector('.name-submit');\n\n  submit!.addEventListener('click', () => {\n    const p1Name = (<HTMLInputElement>document.getElementById('p1-name')).value;\n    const p2Name = (<HTMLInputElement>document.getElementById('p2-name')).value;\n    board.setPlayerNames([p1Name, p2Name]);\n    writeInfoToPage();\n    hideModal('names-screen');\n  });\n}\n\nfunction setResetButton(): void {\n  const newGame = document.querySelector('.reset');\n\n  newGame!.addEventListener('click', () => {\n    board.resetGame();\n    resetBoardClasses();\n    writeBoardToPage();\n    writeInfoToPage();\n    displayModal('names-screen');\n  });\n}\n\nfunction toggleNameInput(): void {\n  const multi = document.getElementById('multi-player') as HTMLInputElement;\n  const p2NameInput = document.getElementById('p2-input');\n\n  if (multi!.checked) {\n    p2NameInput!.style.display = 'block';\n    board.setMultiplayer(true);\n  } else {\n    p2NameInput!.style.display = 'none';\n    board.setMultiplayer(false);\n  }\n}\n\nfunction setPlayerSelectHandler(): void {\n  const radioButtons = document.querySelectorAll('input[name=\"player-select\"]');\n  radioButtons.forEach((radio) => {\n    radio.addEventListener('click', toggleNameInput);\n  });\n}\n\nexport function displayNames(): void {\n  displayModal('names-screen');\n}\n\nexport function displayHandler(): void {\n  setNewGameButton();\n  setNameSubmitButton();\n  setResetButton();\n  setSquareEventHandlers();\n  setPlayerSelectHandler();\n  writeBoardToPage();\n  writeInfoToPage();\n}\n","// eslint-disable-next-line import/extensions\nimport { displayHandler, displayNames } from './display';\nimport { setSquare } from './board';\n\n// setSquare(0, 'O');\n// setSquare(1, 'X');\n// setSquare(2, '');\n//\n// setSquare(3, 'O');\n// setSquare(4, 'X');\n// setSquare(5, 'X');\n//\n// setSquare(6, 'O');\n// setSquare(7, 'O');\n// setSquare(8, 'X');\n\ndisplayNames();\ndisplayHandler();\n"]}