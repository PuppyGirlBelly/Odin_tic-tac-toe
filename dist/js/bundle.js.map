{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/ai.ts","src/ts/board.ts","src/ts/display.ts","src/ts/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","Object","defineProperty","value","board_1","default","arr","moves","board","getBoard","indices","indexOf","push","getValidSquares","Math","floor","random","playSquare","getSquare","resetGame","resetBoard","setMultiplayer","getPlayerNames","setPlayerNames","getScores","getCurrentPlayerMarker","ai_1","multiplayer","squares","players","X","name","marker","score","turn","O","getCurrentPlayer","checkIfEqual","line","markSquare","state","successful","mark","setSquare","some","names","bool","displayHandler","displayNames","document","querySelectorAll","displayModal","id","modal","getElementById","style","display","hideModal","writeBoardToPage","counter","forEach","square","classList","add","concat","writeInfoToPage","p1Label","querySelector","p1Info","p2Label","p2Info","_a","p1Score","p2Score","_b","p1Name","p2Name","player","textContent","toString","parentElement","resetBoardClasses","remove","toggleNameInput","multi","p2NameInput","checked","win","button","addEventListener","index","Number","radio","display_1"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"import { getBoard } from './board';\n\nfunction getRandomElement<Type>(arr: Array<Type>): Type {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nfunction getValidSquares(): number[] {\n  const board = getBoard();\n\n  const indices = [];\n  let i = board.indexOf('');\n\n  while (i !== -1) {\n    indices.push(i);\n    i = board.indexOf('', i + 1);\n  }\n\n  return indices;\n}\n\nexport default function aiMove(): number {\n  const moves = getValidSquares();\n  if (moves.length === 0) return 0;\n  return getRandomElement(moves);\n}\n","// eslint-disable-next-line no-unused-vars, import/no-unresolved, import/extensions\nimport aiMove from './ai';\n\ntype Marker = 'O' | 'X';\nexport type GameState = 'playing' | 'tie' | 'win';\n\ninterface Player {\n  name: string;\n  marker: Marker;\n  score: number;\n  turn: boolean;\n}\n\ninterface Players {\n  X: Player;\n  O: Player;\n}\n\nlet multiplayer = false;\nlet squares = ['', '', '', '', '', '', '', '', ''];\nconst players: Players = {\n  X: { name: '✖', marker: 'X', score: 0, turn: true },\n  O: { name: 'ⵔ', marker: 'O', score: 0, turn: false },\n};\n\nfunction swapPlayers() {\n  players.X.turn = !players.X.turn;\n  players.O.turn = !players.O.turn;\n}\n\nfunction getCurrentPlayer(): Player {\n  if (players.X.turn) {\n    return players.X;\n  }\n  return players.O;\n}\n\nexport function getCurrentPlayerMarker(): string {\n  const player = getCurrentPlayer();\n  return player.marker;\n}\n\nexport function getScores(): number[] {\n  return [players.X.score, players.O.score];\n}\n\nexport function setPlayerNames(names: string[]): void {\n  [players.X.name, players.O.name] = names;\n}\n\nexport function getPlayerNames(): string[] {\n  return [players.X.name, players.O.name];\n}\n\nexport function setMultiplayer(bool: boolean): void {\n  multiplayer = bool;\n}\n\nfunction updateScores(): void {\n  const player = getCurrentPlayer();\n  player.score += 1;\n}\n\nexport function getBoard(): string[] {\n  return squares;\n}\n\nexport function resetBoard(): void {\n  squares = ['', '', '', '', '', '', '', '', ''];\n  players.X.turn = true;\n  players.O.turn = false;\n}\n\nexport function resetGame(): void {\n  squares = ['', '', '', '', '', '', '', '', ''];\n  players.X.turn = true;\n  players.X.score = 0;\n  players.O.turn = false;\n  players.O.score = 0;\n}\n\nexport function getSquare(i: number): string {\n  return squares[i];\n}\n\nfunction setSquare(i: number, mark: string): boolean {\n  if (getSquare(i) === '') {\n    squares[i] = mark;\n    return true;\n  }\n  return false;\n}\n\nfunction checkIfEqual(line: string[]): boolean {\n  return line[0] === line[1] && line[1] === line[2] && line[0] !== '';\n}\n\nfunction hasWinner(): boolean {\n  const lines = [\n    [squares[0], squares[1], squares[2]],\n    [squares[3], squares[4], squares[5]],\n    [squares[6], squares[7], squares[8]],\n    [squares[0], squares[3], squares[6]],\n    [squares[1], squares[4], squares[7]],\n    [squares[2], squares[5], squares[8]],\n    [squares[0], squares[4], squares[8]],\n    [squares[2], squares[4], squares[6]],\n  ];\n\n  return lines.some(checkIfEqual);\n}\n\nfunction hasTie(): boolean {\n  return squares.indexOf('') === -1;\n}\n\nfunction markSquare(i: number): GameState {\n  let state: GameState = 'playing';\n\n  const marker = getCurrentPlayerMarker();\n  const successful = setSquare(i, marker);\n\n  if (successful) {\n    if (hasWinner()) {\n      state = 'win';\n      updateScores();\n      return state;\n    }\n    if (hasTie()) {\n      state = 'tie';\n      return state;\n    }\n  }\n\n  swapPlayers();\n  return state;\n}\n\nexport function playSquare(i: number): GameState {\n  let state: GameState = 'playing';\n\n  if (multiplayer) {\n    state = markSquare(i);\n    return state;\n  }\n\n  state = markSquare(i);\n  if (state === 'win' || state === 'tie') return state;\n\n  const aiSquare = aiMove();\n  state = markSquare(aiSquare);\n  return state;\n}\n","// eslint-disable-next-line import/no-unresolved, import/extensions\nimport * as board from './board';\n\nconst squares = document.querySelectorAll<HTMLElement>('.square');\n\nfunction displayModal(id: string): void {\n  const modal = document.getElementById(id);\n  if (modal != null) {\n    modal.style.display = 'block';\n  }\n}\n\nfunction hideModal(id: string): void {\n  const modal = document.getElementById(id);\n  if (modal != null) {\n    modal.style.display = 'none';\n  }\n}\n\nfunction writeBoardToPage(): void {\n  let counter = 0;\n  let marker: string = '';\n\n  squares.forEach((square) => {\n    marker = board.getSquare(counter);\n    if (marker !== '') {\n      square.classList.add(`${marker}`);\n    }\n    counter += 1;\n  });\n}\n\nfunction writeInfoToPage(): void {\n  const p1Label = document.querySelector('.p1-label');\n  const p1Info = document.querySelector('.p1-info');\n  const turn = document.querySelectorAll('.turn-info');\n  const p2Label = document.querySelector('.p2-label');\n  const p2Info = document.querySelector('.p2-info');\n\n  const [p1Score, p2Score] = board.getScores();\n  const [p1Name, p2Name] = board.getPlayerNames();\n  const player = board.getCurrentPlayerMarker();\n  const marker = player === 'X' ? '✖' : 'ⵔ ';\n\n  p1Label!.textContent = `${p1Name} Score`;\n  p1Info!.textContent = p1Score.toString();\n  turn[0].parentElement!.classList.value = `${player} infobox`;\n  turn.forEach((e) => {\n    e.textContent = marker;\n  });\n  p2Label!.textContent = `${p2Name} Score`;\n  p2Info!.textContent = p2Score.toString();\n}\n\nfunction resetBoardClasses(): void {\n  squares.forEach((square) => {\n    square.classList.remove('X', 'O');\n  });\n}\n\nfunction setSquareEventHandlers(): void {\n  let win: board.GameState = 'playing';\n\n  squares.forEach((square) => {\n    square.addEventListener('click', () => {\n      const index: number = Number(square.id);\n      win = board.playSquare(index);\n      writeInfoToPage();\n      writeBoardToPage();\n\n      if (win === 'win') displayModal('win-screen');\n      if (win === 'tie') displayModal('tie-screen');\n    });\n  });\n}\n\nfunction setNewGameButton(): void {\n  const newGame = document.querySelectorAll('.new-game');\n\n  newGame!.forEach((button) => {\n    button.addEventListener('click', () => {\n      board.resetBoard();\n      resetBoardClasses();\n      writeBoardToPage();\n      writeInfoToPage();\n      hideModal('win-screen');\n      hideModal('tie-screen');\n    });\n  });\n}\n\nfunction setNameSubmitButton(): void {\n  const submit = document.querySelector('.name-submit');\n\n  submit!.addEventListener('click', () => {\n    const p1Name = (<HTMLInputElement>document.getElementById('p1-name')).value;\n    const p2Name = (<HTMLInputElement>document.getElementById('p2-name')).value;\n    board.setPlayerNames([p1Name, p2Name]);\n    writeInfoToPage();\n    hideModal('names-screen');\n  });\n}\n\nfunction setResetButton(): void {\n  const newGame = document.querySelector('.reset');\n\n  newGame!.addEventListener('click', () => {\n    board.resetGame();\n    resetBoardClasses();\n    writeBoardToPage();\n    writeInfoToPage();\n    displayModal('names-screen');\n  });\n}\n\nfunction toggleNameInput(): void {\n  const multi = document.getElementById('multi-player') as HTMLInputElement;\n  const p2NameInput = document.getElementById('p2-input');\n\n  if (multi!.checked) {\n    p2NameInput!.style.display = 'block';\n    board.setMultiplayer(true);\n  } else {\n    p2NameInput!.style.display = 'none';\n    board.setMultiplayer(false);\n  }\n}\n\nfunction setPlayerSelectHandler(): void {\n  const radioButtons = document.querySelectorAll('input[name=\"player-select\"]');\n  radioButtons.forEach((radio) => {\n    radio.addEventListener('click', toggleNameInput);\n  });\n}\n\nexport function displayNames(): void {\n  displayModal('names-screen');\n}\n\nexport function displayHandler(): void {\n  setNewGameButton();\n  setNameSubmitButton();\n  setResetButton();\n  setSquareEventHandlers();\n  setPlayerSelectHandler();\n  writeBoardToPage();\n  writeInfoToPage();\n}\n","// eslint-disable-next-line import/extensions\nimport { displayHandler, displayNames } from './display';\n\ndisplayNames();\ndisplayHandler();\n"]}