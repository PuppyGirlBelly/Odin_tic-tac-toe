{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.js","src/ts/board.ts","src/ts/display.ts","src/ts/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","Object","defineProperty","value","playSquare","getSquare","setSquare","resetBoard","getBoard","resetScores","getScores","getCurrentPlayer","squares","players","X","marker","score","turn","O","v","writeInfoToPage","writeBoardToPage","board","document","querySelectorAll","counter","forEach","square","textContent","p1","querySelector","p2","_a","p1score","p2score","toString","default","reset","addEventListener","display_1"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"export type Marker = 'âµ”' | 'ðŸž¬';\n\ninterface Player {\n  marker: Marker;\n  score: number;\n  turn: boolean;\n}\n\ninterface Players {\n  X: Player;\n  O: Player;\n}\n\nlet squares = ['', '', '', '', '', '', '', '', ''];\nconst players: Players = {\n  X: { marker: 'âµ”', score: 0, turn: true },\n  O: { marker: 'ðŸž¬', score: 0, turn: false },\n};\n\nfunction swapPlayers() {\n  players.X.turn = !players.X.turn;\n  players.O.turn = !players.O.turn;\n}\n\nexport function getCurrentPlayer(): Player {\n  if (players.X.turn) {\n    return players.X;\n  }\n  return players.O;\n}\n\nexport function getScores(): number[] {\n  return [players.X.score, players.O.score];\n}\n\nexport function resetScores(): void {\n  players.X.score = 0;\n  players.O.score = 0;\n}\n\nexport function getBoard(): string[] {\n  return squares;\n}\n\nexport function resetBoard(): void {\n  squares = ['', '', '', '', '', '', '', '', ''];\n}\n\nexport function setSquare(i: number, v: string): boolean {\n  if (squares[i] === '') {\n    squares[i] = v;\n    return true;\n  }\n  return false;\n}\n\nexport function getSquare(i: number): string {\n  return squares[i];\n}\n\nexport function playSquare(i: number) {\n  let marker = '';\n  if (players.X.turn === true) marker = 'X';\n  if (players.O.turn === true) marker = 'O';\n\n  const successful = setSquare(i, marker);\n\n  if (successful) {\n    swapPlayers();\n  }\n}\n","import * as board from './board';\n\nconst squares = document.querySelectorAll<HTMLElement>('.square');\n\nexport function writeBoardToPage(): void {\n  let counter = 0;\n  let marker: string = '';\n\n  squares.forEach((square) => {\n    marker = board.getSquare(counter);\n    // eslint-disable-next-line no-param-reassign\n    square.textContent = marker;\n    // eslint-disable-next-line no-plusplus\n    counter++;\n  });\n}\n\nexport function writeInfoToPage(): void {\n  const p1 = document.querySelector('.player1');\n  const turn = document.querySelector('.turn');\n  const p2 = document.querySelector('.player2');\n  const [p1score, p2score] = board.getScores();\n\n  p1.textContent = p1score.toString();\n  turn.textContent = board.getCurrentPlayer().marker;\n  p2.textContent = p2score.toString();\n}\n\nfunction setResetButton(): void {\n  const reset = document.querySelector('.reset');\n\n  reset?.addEventListener('click', () => {\n    board.resetBoard();\n    board.resetScores();\n    writeBoardToPage();\n  });\n}\n\nexport default function displayHandler(): void {\n  setResetButton();\n  writeBoardToPage();\n  writeInfoToPage();\n}\n","// eslint-disable-next-line import/extensions\nimport * as board from './board';\nimport displayHandler from './display';\n\nboard.resetBoard();\nboard.setSquare(0, 'X');\nboard.setSquare(1, 'O');\nboard.setSquare(2, 'O');\nboard.setSquare(3, 'O');\nboard.setSquare(4, 'X');\nboard.setSquare(5, 'X');\nboard.setSquare(6, 'O');\nboard.setSquare(7, 'X');\nboard.setSquare(8, 'O');\n\ndisplayHandler();\n"]}